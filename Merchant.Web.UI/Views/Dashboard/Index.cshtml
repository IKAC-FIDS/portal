

@model DashboardViewModel

@{
    ViewBag.Title = "داشبورد";
}
<style>
.zoom{
    z-index: 1000000000000000000000;
}
    .zoom:hover {
      -ms-transform: scale(2); /* IE 9 */
      -webkit-transform: scale(2); /* Safari 3-8 */
      transform: scale(1.5); 
      z-index: 1000000000000000000000;
    }


.btn-go-to-poll {
    position: relative;
    border: 1px solid lightgray ; 
    width: 200px;
    height: 60px;
    background-image: linear-gradient(#66859b, #214b6a);
    color: white;

    border-radius: 30px;
    bottom: 145px;
    margin-right: -22px;
}

.btn-go-to-poll a {
    text-decoration: none; 
    color: inherit;
    width: 100%;
}

.btn-go-to-poll:hover {
    background-image: linear-gradient(white, white);
    color: #214b6a !important;
}



</style>
<script xmlns="http://www.w3.org/1999/html">
// Set the date we're counting down to
var countDownDate = new Date("2021-05-12 16:10").getTime();

// Update the count down every 1 second
var x = setInterval(function() {

  // Get today's date and time
  var now = new Date().getTime();

  // Find the distance between now and the count down date
  var distance = countDownDate - now;

  // Time calculations for days, hours, minutes and seconds
  var days = Math.floor(distance / (1000 * 60 * 60 * 24));
  var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
  var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
  var seconds = Math.floor((distance % (1000 * 60)) / 1000);

  // Display the result in the element with id="demo"
  // document.getElementById("countDownDemo").innerHTML = days + "d " + hours + "h "
  // + minutes + "m " + seconds + "s ";

if (days == 0)
{
      document.getElementById("countDownDemoDays").innerHTML =  hours + " ساعت " + minutes + " دقیقه " + seconds + " ثانیه "  ;
   
    }
else {
          document.getElementById("countDownDemoDays").innerHTML =  days + " روز " + hours + " ساعت " + minutes + " دقیقه "  ;

    }
  
     
  // If the count down is finished, write some text
  if (distance < 0) {
    clearInterval(x);
  //  document.getElementById("countDownDemo").innerHTML = "EXPIRED";
    
      document.getElementById("countDownDemoDays").innerHTML = "خاتمه یافته" ;
     //   document.getElementById("countDownDemoHours").innerHTML =    "00"  ;
       // document.getElementById("countDownDemoMinutes").innerHTML =  "00"  ;
  }
}, 1000);
</script>

<div class="page-header">
<div class="row">
    <div class="col-md-7">
        <div class="row">
            @if (Model.NeedToReformTerminalCount > 0)
            { 
                <div class="col-md-3"> 
                    <a href="@Url.Action("Manage", "Terminal",
                                 new { commaSeparatedStatuses =
                                     string.Join(",", TerminalStatus.NeedToReform.ToInt64(), TerminalStatus.UnsuccessfulReturnedFromSwitch.ToInt64()) })">
                        <div class="alert alert-labeled clickable alert-danger">
                            <div class="alert-labeled-row">
                                <span class="alert-label alert-labelled-cell">
                                    <i class="fa fa-pencil"></i>
                                </span>
                                <p class="alert-labelled-cell">
                                                                                                  
                                    <strong style="text-decoration: underline;">
                                        @Model.NeedToReformTerminalCount.ToString()
                                    </strong>
                                    <br />
                                    نیازمند اصلاح   
                                </p>
                            </div>
                        </div>
                    </a>
                </div>
            }
            @if (Model.WaitingForRevokeCount > 0)
            {<div class="col-md-3"> 
                 <a href="@Url.Action("Manage", "Terminal",
                              new { commaSeparatedStatuses =
                                  string.Join(",", TerminalStatus.WaitingForRevoke.ToInt64()) })">
                     <div class="alert alert-labeled clickable alert-info">
                         <div class="alert-labeled-row">
                             <span class="alert-label alert-labelled-cell">
                                 <i class="fa fa-pencil"></i>
                             </span>
                             <p class="alert-labelled-cell">
                                                                                                  
                                 <strong style="text-decoration: underline;">
                                     @Model.WaitingForRevokeCount.ToString()
                                 </strong>    
                                 <br />
                                 درانتظارجمع آوری  
                             </p>
                         </div>
                     </div>
                 </a>
             </div>
            }
            @if (Model.NewCount > 0)
            {
                <div class="col-md-3"> 
                    <a href="@Url.Action("Manage", "Terminal",
                                 new { commaSeparatedStatuses =
                                     string.Join(",", TerminalStatus.New.ToInt64()) })">
                        <div class="alert alert-labeled clickable alert-success">
                            <div class="alert-labeled-row">
                                <span class="alert-label alert-labelled-cell">
                                    <i class="fa fa-pencil"></i>
                                </span>
                                <p class="alert-labelled-cell">
                                                                                                 
                                    <strong style="text-decoration: underline;">
                                        @Model.NewCount.ToString()
                                    </strong>   
                                    <br />
                                    ورود به بازاریابی
                                </p>
                            </div>
                        </div>
                    </a>
                </div>
            }
            @if (ViewBag.OpenMessage >= 0)
            {
                <div class="col-md-3"> 
                    <a href="@Url.Action("Index", "Message")">
                        <div class="alert alert-warning alert-labeled clickable">
                            <div class="alert-labeled-row">
                                <span class="alert-label alert-labelled-cell">
                                    <i class="fa fa-ticket"></i>
                                </span>
                                <p class="alert-labelled-cell">  <strong style="text-decoration: underline;">@ViewBag.OpenMessage.ToString()</strong>  
                                    <br />
                                    تیکت باز
                                </p>
                            </div>
                        </div>
                    </a>
                </div>
            }   
        </div>
        <div class="row">
               <div class="col-md-12" style="margin:3px 0 3px 0;">
                        <div class="col-md-12" style="">
                            <div class="col-md-12 bg-primary" style="margin:0 0 0 1%;">
                                <div class="col-md-6">
                                    <h5>اطلاعیه ها</h5>
                                </div>
                                
                            </div>
                            <div class="col-md-12" style="padding-right: 0px;padding-left: 0px;background-color: ivory;">
                                <div style="margin:4px 0 4px 0;background-color:lightgray;">
                                    <div class="col-md-10"><strong>اطلاعیه</strong></div>
                                    <div class="col-md-2" style="text-align: center;"><strong>تاریخ</strong></div>
                                </div>
                                <br />
                                <div style="margin: 3px 0 3px 0; border-bottom: ridge; border-bottom-color: navy "></div>
                            </div>
                        </div>
                        <div class="col-md-12 bg-success" style="background:padding-box;overflow-y:auto;max-height:400px;">
                            @foreach (var news in Model.News)
                            {
                                <div style="margin:3px 0 3px 0;">
                                    <div class="col-md-10"><strong><a href="@Url.Action("Details", "News", new {id = news.Id})">@news.Title</a></strong></div>
                                    <div class="col-md-2" style="text-align: center;">@news.PublishDate.ToPersianDateTime().Substring(0, 10)</div>
                                </div>
                                <br />
                                <div style="margin: 4px 0 4px 0;padding: 8px 0 8px 0; border-bottom: ridge; border-bottom-color: navy "></div>
                                        
                            }
                        </div>            
                    </div>
                
        </div>
        </div>




<!-- Stuff is here -->
    <div class="col-md-5">
        <div class="row" style="text-align: center;">

            <img  src="\Content/images/s1.jpg" style=" height: 400px;width: 95%;  object-fit: cover"  >

            <button class="btn-go-to-poll" onclick="window.open(`http://newportal.tes.ir/#/branchLogin`, '_blank')">
                <a  href="http://newportal.tes.ir/#/branchLogin" target="_blank"
                >ورود به صفحه نظر سنجی</a>
            </button>
           
        </div>
   
        </div>



   
    <!-- <div class="col-md-5" style="background: #f1e8ff ;height: 400px" >
        <div class="row">
            <div class="col-md-4"   >
                <img class="zoom"   style=" height: 400px;width: 100%;  object-fit: cover" src="\Content/images/mobile.png" alt=""/>  
            </div>
            <div class="col-md-8" style="top:30px;">
                <div class="col-md-12" style="font-size: medium;text-align: center;">
                    زمان باقیمانده تا اعلام نفرات برتر
    
                </div>
                <div class="col-md-12" style="font-size: medium;text-align: center; margin-bottom: 5px; color: #E91E63; font-weight: bold">
                    <span id="countDownDemoDays"> </span>
    
                </div>
                <div>
                    <div class="col-md-12" style="">
                        <div class="col-md-12 bg-primary" 
                        style="margin:0 0 0 1%;font-size: large;text-align: center;background: #880000;padding-top: 3px;padding-bottom: 3px;font-weight: bold;"
                             >
    
                            کاربران برتر پلتفرم پرداختی "سرمایه"  
    
                        </div>
                        <div class="col-md-12" style="padding-right: 0px;padding-left: 0px;background-color: ivory;">
                            <div style="margin:4px 0 4px 0;background-color:lightgray;">
                                <div class="col-md-6" style="font-size: small"><strong>نام و نام خانوادگی</strong></div>
                                <div class="col-md-4" style="text-align: center;"><strong>شعبه</strong></div>
                                <div class="col-md-2" style="text-align: center;"><strong>امتیاز</strong></div>
                            </div>
                            <br/>
                            <div style="margin: 3px 0 3px 0; border-bottom: ridge; border-bottom-color: navy "></div>
                        </div>
                    </div>
                    <div class="col-md-12 bg-success" style="background:padding-box;max-height:160px;">
                        @foreach (var news in Model.Rating)
                        {
                            <div style="margin:3px 0 3px 0;">
                                <div class="col-md-6"><strong> @news.FullName </strong></div>
                                <div class="col-md-4" style="font-size: small; text-align: center;">@news.Branch</div>
                                <div class="col-md-2" style="text-align: center;">@news.Rating</div>
                            </div>
                            <br/>
                            <div style="margin: 4px 0 4px 0; border-bottom: ridge; border-bottom-color: navy "></div>
    
                        }
                    </div>
                    <div class="col-md-12 " style="  
                   font-size: small;text-align: left; padding-top: 3px;padding-bottom: 3px;
                    ">
                        آخرین بروزرسانی @Model.LastUpdate
                    </div>
                    </div>
    
            </div>
        </div>
    </div> -->
    
</div>
     
    <div class="row" style="margin: 1px 0 3px 0;">
     
     
    
    @if (false && User.IsBranchUser())
            {
                <div class="col-md-4">
                    <div class="col-md-12">

                        <div class="col-md-2">


                            <span style="background-color:     #5C6BC0;   font-weight: 500;" data-toggle="tooltip"
                                  title="  فن آوا  " class="label label-default small-label"> FA </span>
                        </div>
                        <div class="col-md-2">
                            <span id="FaSliderLabel">@Model.FaRate</span>
                        </div>
                        <div class="col-md-8"> <input onchange="ChangeSlider('Fa')" type="range" min="0" max="100" value="@Model.FaRate" class="slider" id="FaSlider"> </div>
                    </div>

                    <br/>
                    <div class="col-md-12">

                        <div class="col-md-2">
                            <span style="background-color:      #E91E63   ; font-weight: 500;" data-toggle="tooltip"
                                  title=" ایران کیش  " class="label label-default small-label"> IK </span> </div>

                        <div class="col-md-2">
                            <span id="IkSliderLabel">@Model.IkRate</span>
                        </div>

                        <div class="col-md-8"> <input onchange="ChangeSlider('Ik')" type="range" min="0" max="100" value="@Model.IkRate" class="slider" id="IkSlider"> </div>
                    </div>

                    <div class="col-md-12">


                        <div class="col-md-2">
                            <span style="background-color:     #FFB300   ; font-weight: 500;" data-toggle="tooltip"
                                  title="   پارسیان    " class="label label-default small-label"> PA </span> </div>
                        <div class="col-md-2">
                            <span id="PaSliderLabel">@Model.PaRate</span>
                        </div>


                        <div class="col-md-8"> <input onchange="ChangeSlider('Pa')" type="range" min="0" max="100" value="@Model.PaRate" class="slider" id="PaSlider"> </div>
                    </div>

                </div>
            }
        </div>
</div>
    @if (!User.IsBranchUser())
    {
        <div class="row">

            <div class="col-md-7" style="margin-bottom: 20px;z-index: -1">
                <div id="TerminalsByStatusChartContainer"></div>
            </div>

            <div class="col-md-2" style="margin-bottom: 20px;z-index: -1">
                <div id="TerminalsByPspChartContainer"></div>
            </div>

            <div class="col-md-3" style="margin-bottom: 20px;z-index: -1">
                <div id="TerminalsByDeviceTypeChartContainer"></div>
            </div>
        </div>
        <div class="row" style="background-color:gainsboro;">
            <div class="col-md-6" style="padding-top:10px;">
                <div id="TerminalsByStateChartContainer"></div>
            </div>
            <div id="LastSixMonthTransactionStatusChartContainer" class="col-md-6" style="padding-top:10px;">
                <div class="status-section"><i class="fa fa-spin fa-cog"></i>
                    <p>در حال بارگذاری اطلاعات...</p></div>
            </div>

        </div>
    }
    @if (User.IsBranchUser())
    {

        <div class="row" style="background-color:gainsboro;">
            <div class="col-md-6" style="padding-top:10px;">
                 <div id="TerminalsByStatusChartContainer"></div>
            </div>
            <div id="LastSixMonthTransactionStatusChartContainer" class="col-md-6" style="padding-top:10px;">
                <div class="status-section"><i class="fa fa-spin fa-cog"></i>
                    <p>در حال بارگذاری اطلاعات...</p></div>
            </div>

        </div>
    }
<div class="row">

    @if (!User.IsBranchUser())
    {
        <div id="TransactionChartsContainer">
            <div class="status-section"><i class="fa fa-spin fa-cog"></i> <p>در حال بارگذاری اطلاعات...</p></div>
        </div>
    }
</div>


@section scripts {
    @BundleConfig.AddScripts("~/bundles/dashboardIndexScripts",
        "~/Scripts/highcharts/highcharts.js",
        "~/Scripts/highcharts/highcharts-more.js",
        "~/Scripts/highcharts/exporting.js",
        "~/Scripts/highcharts/offline-exporting.js")

    <script type="text/javascript">
        Highcharts.setOptions({
            lang: {
                thousandsSep: ''
            },
            colors: ['#8BC34A', '#E91E63', '#00BCD4', '#009688', '#9C27B0', '#FFC107', '#4CAF50', '#795548', '#03A9F4']
        });
//-----------------------------------------------------------------------------------------------

        @if (Model.TerminalsByStatusData.Any())
        {
            <text>
                $('#TerminalsByStatusChartContainer').highcharts({
                    chart: { type: 'pie' },
                    title: { text: 'به تفکیک وضعیت' },
                    tooltip: {
                        useHTML:true,
                        crosshairs: true,
                        formatter: function () {
                            return '<b>' + this.point.name + '</b><br /><b>' + convertToPersianNumbers(this.y) + ' پذیرنده</b><br />'
                                + convertToPersianNumbersThreeDigitsSeparated(this.percentage.toFixed(1)) + ' درصد';
                        }
                    },
                    series: [{
                        name: 'پذیرنده',
                        data: @Html.Raw(Model.TerminalsByStatusData.SerializeToJson()),
                        dataLabels: {
                            enabled: true,
                            crop: false,
                            inside: false,
                            borderWidth: 0,
                            style: {
                                textOutline: false
                            },
                            formatter: function () {
                                return this.point.name + ' - ' + convertToPersianNumbersThreeDigitsSeparated(this.y);
                            }
                        }
                    }],
                    colors: ['#5C6BC0', '#EC407A', '#26A69A', '#FFCA28', '#26C6DA', '#7E57C2', '#66BB6A', '#FFA726', '#BDBDBD', '#78909C']
                });
            </text>
        }
//-----------------------------------------------------------------------------------------------
        @if (!User.IsBranchUser() && Model.TerminalsByPspData.Any())
        {
            <text>
                $('#TerminalsByPspChartContainer').highcharts({
                    exporting: {
                        chartOptions: {
                            plotOptions: {
                                series: {
                                    dataLabels: {
                                        enabled: true
                                    }
                                }
                            }
                        },
                        fallbackToExportServer: false
                    },
                    title: { text: 'psp به تفکیک' },
                    chart: { type: 'column' },
                    xAxis: { categories: ['ایران کیش', 'پارسیان', 'پرداخت نوین', 'فن آوا'],
               //     xAxis: { categories: ['ایران کیش', 'پارسیان', 'فن آوا'],
                        labels: { rotation: 90 }
                    },
                    yAxis: {
                        title: { enabled: false },
                        min: 0,
                        labels: {
                            formatter: function () {
                                return convertToPersianNumbersThreeDigitsSeparated(this.value);
                            }
                        }
                    },
                    legend: { enabled: false },
                    series: [{
                        name: ' ',
                        data: @Html.Raw(Model.TerminalsByPspData.SerializeToJson()),
                        dataLabels: {
                            enabled: true,
                            rotation: 90,
                            crop: false,
                            y: -20,
                            inside: false,
                            formatter: function () {
                                return convertToPersianNumbersThreeDigitsSeparated(this.y);
                            }
                        }
                    }],
                    tooltip: {
                        useHTML: true,
                        crosshairs: true,
                        formatter: function () {
                            return '<b>' + convertToPersianNumbers(this.x) + '</b> <br />' + convertToPersianNumbersThreeDigitsSeparated(this.y);
                        }
                    },
                    colors: ['#2d6dcc']
                });
            </text>
        }
//-----------------------------------------------------------------------------------------------
        @if (!User.IsBranchUser() && Model.TerminalsByDeviceTypeData.Any())
        {
            <text>
                $('#TerminalsByDeviceTypeChartContainer').highcharts({
                    exporting: {
                        chartOptions: {
                            plotOptions: {
                                series: {
                                    dataLabels: {
                                        enabled: true
                                    }
                                }
                            }
                        },
                        fallbackToExportServer: false
                    },
                    title: { text: 'به تفکیک مدل دستگاه' },
                    chart: { type: 'column' },
                    xAxis: { categories: ['Dialup', 'GPRS', 'LAN POS', 'MPOS', 'PCPOS', 'Typica/GPRS', 'Wifi', 'Other'],
                        labels: { rotation: 90 }
                    },
                    yAxis: {
                        title: { enabled: false },
                        min: 0,
                        labels: {
                            formatter: function () {
                                return convertToPersianNumbersThreeDigitsSeparated(this.value);
                            }
                        }
                    },
                    legend: { enabled: false },
                    series: [{
                        name: ' ',
                        data: @Html.Raw(Model.TerminalsByDeviceTypeData.SerializeToJson()),
                        dataLabels: {
                            enabled: true,
                            rotation: 90,
                            crop: false,
                            y: -20,
                            inside: false,
                            formatter: function () {
                                return convertToPersianNumbersThreeDigitsSeparated(this.y);
                            }
                        }
                    }],
                    tooltip: {
                        useHTML: true,
                        crosshairs: true,
                        formatter: function () {
                            return '<b>' + convertToPersianNumbers(this.x) + '</b> <br />' + convertToPersianNumbersThreeDigitsSeparated(this.y);
                        }
                    },
                    colors: ['#2d6dcc']
                });
            </text>
        }
//-----------------------------------------------------------------------------------------------

        @if (!User.IsBranchUser() && Model.TerminalsByStateChart.ChartData.Any())
        {
            <text>
                $('#TerminalsByStateChartContainer').highcharts({
                    exporting: {
                        chartOptions: {
                            plotOptions: {
                                series: {
                                    dataLabels: {
                                        enabled: true
                                    }
                                }
                            }
                        },
                        fallbackToExportServer: false
                    },
                    title: { text: 'به تفکیک استان' },
                    chart: { type: 'column' },
                    xAxis: { categories: @Html.Raw(Model.TerminalsByStateChart.ChartCategories.SerializeToJson()),
                        labels: { rotation: 90 }
                    },
                    yAxis: {
                        title: { enabled: false },
                        min: 0,
                        labels: {
                            formatter: function () {
                                return convertToPersianNumbersThreeDigitsSeparated(this.value);
                            }
                        }
                    },
                    legend: { enabled: false },
                    series: [{
                        name: ' ',
                        data: @Html.Raw(Model.TerminalsByStateChart.ChartData.SerializeToJson()),
                        dataLabels: {
                            enabled: true,
                            rotation: 90,
                            crop: false,
                            y: -20,
                            inside: false,
                            formatter: function () {
                                return convertToPersianNumbersThreeDigitsSeparated(this.y);
                            }
                        }
                    }],
                    tooltip: {
                        useHTML: true,
                        crosshairs: true,
                        formatter: function () {
                            return '<b>' + convertToPersianNumbers(this.x) + '</b> <br />' + convertToPersianNumbersThreeDigitsSeparated(this.y);
                        }
                    },
                    colors: ['#009688']
                });
            </text>
        }
//--44444---------------------------------------------------------------------------------------------

//-----------------------------------------------------------------------------------------------

        $(document).ready(function () {
            @if (!User.IsBranchUser())
            {
                <text>
                    $.get('@Url.Action("TransactionCharts", "Dashboard")', function (result) {
                        $('#TransactionChartsContainer').empty().append(result);
                    });
                </text>
            }

            $.get('@Url.Action("LastSixMonthTransactionStatusChart", "Dashboard")', function (result) {
                $('#LastSixMonthTransactionStatusChartContainer').empty().append(result);
            });
        });
        
        function  ChangeSlider (input) {
             var l = $("#" + input + "Slider").val();
            $("#" + input + "SliderLabel").html(l);
            
            var data = {
                PspId:2,
                Psp : input, 
                Rate : l
                } 
            
                
              $.ajax({
                            url: '/Rule/BranchPspRating',
                            dataType: "json",
                            type: 'post',
                             contentType: "application/json",
                            data: JSON.stringify(data),
                            success: function( data, textStatus, jQxhr ){
                              // console.log('na rid')
                            },
                            error: function( jqXhr, textStatus, errorThrown ){
                              //  console.log( 'rid' );
                            }
                        });
                        
            }
    </script>
}
