@{
    ViewBag.Title = "درخواست های جمع آوری";
}

@section styles {
    @BundleConfig.AddStyles("~/Content/revokeRequestManageStyles",
        "~/Content/PersianDatePicker.css",
        "~/Content/chosen.css")
}

<div class="page-header">
    <h1>درخواست های جمع آوری</h1>
</div>

<form id="SearchForm" class="form-horizontal">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-4" for="StatusId">وضعیت</label>
                <div class="col-md-8">
                    @Html.DropDownList("StatusId", (IEnumerable<SelectListItem>)ViewBag.StatusList, "انتخاب نمایید", new { @class = "form-control" })
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-4" for="PspId">شرکت PSP</label>
                <div class="col-md-8">
                    <select class="form-control" id="PspId">
                        <option value="@PspCompany.All.ToInt32()" selected>همه</option>
                        <option value="@PspCompany.Fanava.ToInt32()">فن آوا</option>
                        <option value="@PspCompany.IranKish.ToInt32()">ایرانکیش</option>
                        <option value="@PspCompany.Parsian.ToInt32()">پارسیان</option>
                                  <option value="@PspCompany.PardakhNovin.ToInt32()">پرداخت نوین</option>
                        <option>تخصیص داده نشده</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-4" for="TerminalNo">شماره پایانه</label>
                <div class="col-md-8">
                    <input type="text" id="TerminalNo" name="TerminalNo" class="form-control only-number" maxlength="18" />
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-4" for="CustomerNumber">شماره مشتری</label>
                <div class="col-md-8">
                    <input type="text" id="CustomerNumber" name="CustomerNumber" class="form-control only-number" maxlength="8" />
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-4" for="NationalCode">کد ملی</label>
                <div class="col-md-8">
                    <input type="text" id="NationalCode" name="NationalCode" class="form-control only-number" maxlength="10" />
                </div>
            </div>
        </div>
        
        @if (!User.IsBranchUser())
        {
            <div class="col-md-6">
                <div class="form-group">
                    <label class="control-label col-md-4" for="BranchId">شعبه حساب</label>
                    <div class="col-md-8">
                        @Html.DropDownList("BranchId", (IEnumerable<SelectListItem>)ViewBag.BranchList, "انتخاب نمایید", new { @class = "chosen-select chosen-rtl" })
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-4" for="FromRequestDate">از تاریخ درخواست</label>
                <div class="col-md-6">
                    <div class="left-inner-addon">
                        <i class="fa fa-calendar-o"></i>
                        <input type="text" id="FromRequestDate" name="FromRequestDate" class="form-control date-picker" maxlength="10" />
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-4" for="ToRequestDate">تا تاریخ درخواست</label>
                <div class="col-md-6">
                    <div class="left-inner-addon">
                        <i class="fa fa-calendar-o"></i>
                        <input type="text" id="ToRequestDate" name="ToRequestDate" class="form-control date-picker" maxlength="10" />
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label class="control-label col-md-4">نوع دستگاه</label>
                <div class="col-md-8">
                    <div class="btn-group" data-toggle="buttons">
                        <label class="btn btn-default active">
                            <input type="radio" name="IsWireless" id="IsWirelessAll" checked /> همه
                        </label>
                        <label class="btn btn-default">
                            <input type="radio" name="IsWireless" value="true" /> سیار
                        </label>
                        <label class="btn btn-default">
                            <input type="radio" name="IsWireless" value="false" /> ثابت
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="button" id="SearchButton" class="btn btn-primary" data-loading-text="در حال جستجو...">جستجو</button>
            <button type="button" id="ExportButton" class="btn btn-default" data-toggle="tooltip" title="دریافت خروجی اکسل موارد یافت شده" data-loading-text="در حال تهیه خروجی. لطفاً منتظر بمانید...">دریافت خروجی</button>
            <button type="button" id="ClearSearchFiltersButton" class="btn btn-default">حذف تمامی فیلترها</button>
        </div>
    </div>
</form>

<hr />

<div id="TotalSearchResultSection"></div>

<br />

<div class="table-responsive">
    <table class="table table-bordered table-striped text-center" id="DataTable">
        <thead>
            <tr>
                <th width="1px">وضعیت</th>
                <th width="1px">PSP</th>
                <th>شماره پایانه</th>
                <th>نوع دستگاه</th>
                <th>علت</th>
                <th>علت دوم</th>
                <th>شعبه</th>
                <th>تاریخ درخواست</th>
                <th width="1px"></th>
            </tr>
        </thead>
        <tbody>
        <tr>
            <td colspan="15"><div class="status-section"><i class="fa fa-folder-o"></i><p>هیچ موردی یافت نشد</p></div></td>
        </tr>
        </tbody>
        <tfoot>
        <tr>
            <td colspan="15">
                <ul id="RevokeRequestPagination" class="pagination-sm"></ul>
            </td>
        </tr>
        </tfoot>
    </table>
</div>

<div style="z-index: 10000;" class="modal fade" id="DownloadFileModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <p><a class="btn btn-success btn-lg btn-block" id="DownloadFileLink" href="#">دانلود</a></p>
                <button type="button" class="btn btn-default btn-lg btn-block" data-dismiss="modal">انصراف</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="showResultModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h3 class="panel-title">
                    مشاهده متن خطا
                </h3>
            </div>
            <div class="modal-body">
                <p id="ResultText"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">بستن</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    @BundleConfig.AddScripts("~/bundles/revokeRequestManageScripts",
        "~/Scripts/jquery.twbsPagination.js",
        "~/Scripts/jquery.form.js",
        "~/Scripts/PersianDatePicker.js",
        "~/Scripts/jquery.modal.js",
        "~/Scripts/jquery.validate.js",
        "~/Scripts/jquery.validation-extensions.js",
        "~/Scripts/jquery.validation-messages.fa.js",
        "~/Scripts/jquery.filter_input.js",
        "~/Scripts/jquery.confirm.js",
        "~/Scripts/jasny-bootstrap.js",
        "~/Scripts/chosen.jquery.js")

<script type="text/javascript">
        function buildSearchParams() {
            return {
                requestStatusId: $('#StatusId', '#SearchForm').val(),
                pspId: $('#PspId', '#SearchForm').val(),
                terminalNo: $('#TerminalNo', '#SearchForm').val(),
                nationalCode: $('#NationalCode', '#SearchForm').val(),
                branchId: $('#BranchId', '#SearchForm').val(),
                fromRequestDate: $('#FromRequestDate', '#SearchForm').val(),
                toRequestDate: $('#ToRequestDate', '#SearchForm').val(),
                customerNumber: $('#CustomerNumber', '#SearchForm').val(),
                isWireless: $('input[name=IsWireless]:checked', '#SearchForm').val()
            };
        }

        function loadData(retriveTotalPageCount, page) {
            $('#DataTable tbody').empty().append('<tr><td colspan="15"><div class="status-section"><i class="fa fa-spin fa-cog"></i> <p>در حال بارگذاری اطلاعات...</p></div></td></tr>');

            if (retriveTotalPageCount) {
                var pagingData = $('#RevokeRequestPagination').data('twbs-pagination');
                if (pagingData) $('#RevokeRequestPagination').twbsPagination('destroy');
                $('#SearchButton').removeData('total-pages');
            }

            var $button = $('#SearchButton');
            $button.button('loading');

            var data = $.extend({ retriveTotalPageCount: retriveTotalPageCount, page: page }, buildSearchParams());

            return $.post('@Url.Action("GetRevokeRequestData", "RevokeRequest")', data)
                .done(function (result) {
                    $button.button('reset');
                    $('#DataTable tbody').empty();
                    $('#TotalSearchResultSection').empty();
                    var html = '';

                    if (!result.success) {
                        $('#DataTable tbody').empty().append('<tr><td colspan="15"><div class="status-section"><i class="fa fa-frown-o"></i><p>خطا در بارگذاری اطلاعات</p></div></td></tr>');
                        return false;
                    }

                    if (result.data.rows.length === 0) {
                        $('#DataTable tbody').empty().append('<tr><td colspan="15"><div class="status-section"><i class="fa fa-folder-o"></i><p>هیچ موردی یافت نشد</p></div></td></tr>');
                        return false;
                    }

                    if (retriveTotalPageCount) {
                        $('#TotalSearchResultSection').empty().append('<b>تعداد موارد یافت شده: </b>' + convertToPersianNumbers(result.data.totalRowsCount) + ' مورد');
                    } else {
                        $('#TotalSearchResultSection').empty();
                    }

                    if (retriveTotalPageCount && result.data.totalRowsCount > 0) {
                        $('#SearchButton').data('total-pages', result.data.totalRowsCount);

                        $('#RevokeRequestPagination').twbsPagination({
                            totalPages: Math.ceil(result.data.totalRowsCount / 300),
                            visiblePages: 7,
                            last: '<i class="fa fa-fast-backward"></i>',
                            next: '<i class="fa fa-backward"></i>',
                            prev: '<i class="fa fa-forward"></i>',
                            first: '<i class="fa fa-fast-forward"></i>',
                            initiateStartPageClick: false,
                            onPageClick: function (event, page) {
                                loadData(false, page);
                            }
                        });
                    }

                    for (var i = 0; i < result.data.rows.length; i++) {
                        var item = result.data.rows[i];

                        html += '<tr data-revoke-request-id="' + item.revokeRequestId + '" data-status-id="' + item.statusId + '">' +
                            '<td style="text-align: right !important;" class="text-nowrap">' + createRequestStatusIcon(item.statusId, item.requestStatus, item.submitterUserFullName) + '</td>' +
                            '<td class="text-nowrap">' + createPspIcon(item.pspId, item.pspTitle) + '</td>' +
                            '<td>' + (item.terminalNo || '') + '</td>' +
                            '<td>' + (item.deviceTypeTitle || '') + '</td>' +
                            '<td>' + item.reasonTitle + '</td>' +
                            '<td>' + item.secondReasonTitle + '</td>' +
                            '<td>' + item.branchTitle + '</td>' +
                            '<td> <span data-toggle="tooltip" title="' + item.relativeSubmitTime + '">' + item.persianSubmitTime + '</span></td>' +
                            '<td class="text-nowrap actions">';

                        html += showViewErrorButton(item.statusId, item.result);
                        html += showApproveAndDisapproveButton(item.statusId, item.revokeRequestId);
                        html += showDeleteButton(item.statusId, item.revokeRequestId);
                         html += showEditButton(item.statusId, item.revokeRequestId);
                        html += showSendAgainButton(item.statusId, item.revokeRequestId);
                        html += '</td></tr>';
                    }

                    $('#DataTable tbody').empty().append(html);
                    $('[data-toggle="tooltip"]').tooltip();
                });
        }

        function showViewErrorButton(statusId, result) {
            if (statusId === @RequestStatus.NeedToReform.ToByte() || statusId === @RequestStatus.WebServiceError.ToByte() || statusId === @RequestStatus.Rejected.ToByte() && @JsonNet.Encode(User.IsAcceptorsExpertUser() || User.IsItUser() || User.IsBranchUser())) {
                return '<button data-toggle="tooltip" data-loading-text="..." title="مشاهده خطای رخ داده" class="btn btn-warning btn-xs btn-show-result" data-result="' + result + '"><i class="fa fa-bug"></i></button> &nbsp;';
            } else {
                return '';
            }
        }

        function showApproveAndDisapproveButton(statusId, revokeRequestId) {
            if (statusId === @RequestStatus.SentToPsp.ToByte() && @JsonNet.Encode(User.IsAcceptorsExpertUser())) {
                return '<button data-id="' + revokeRequestId + '" data-toggle="tooltip" data-loading-text="..." title="تایید" class="btn btn-success btn-xs btn-approve"><i class="fa fa-check"></i></button>&nbsp; <button data-id="' + revokeRequestId + '" data-toggle="tooltip" data-loading-text="..." title="رد" class="btn btn-danger btn-xs btn-disapprove"><i class="fa fa-ban"></i></button>&nbsp;';
            } else {
                return '';
            }
        }
         function showEditButton(statusId, revokeRequestId) {
            return '<button data-loading-text="..." data-toggle="tooltip" title="ویرایش" data-id="' + revokeRequestId + '"' +
             ' class="btn btn-success btn-xs btn-edit"><i class="fa fa-edit"></i></button> &nbsp;';

        }
        function showDeleteButton(statusId, revokeRequestId) {
            if (@JsonNet.Encode(User.IsAdmin()) || (@JsonNet.Encode(User.IsAcceptorsExpertUser()) && statusId === @RequestStatus.NeedToReform.ToByte() || statusId === @RequestStatus.WebServiceError.ToByte())) {
                return '<button data-loading-text="..." data-toggle="tooltip" title="حذف" data-id="' + revokeRequestId + '" class="btn btn-danger btn-xs btn-delete"><i class="fa fa-trash"></i></button> &nbsp;';
            } else {
                return '';
            }
        }
      
        function showSendAgainButton(statusId, revokeRequestId) {
            if (
                (statusId === @RequestStatus.WebServiceError.ToByte()  || statusId === @RequestStatus.NeedToEdit.ToByte()
                || statusId === @RequestStatus.Registered.ToByte()
                )
                && @JsonNet.Encode(User.IsAcceptorsExpertUser() || User.IsItUser() || User.IsBranchUser())) {
                return '<button data-toggle="tooltip" title="ارسال مجدد" data-id="' + revokeRequestId + '" class="btn btn-info btn-xs btn-send-revoke-request"><i class="fa fa-send"></i></button> &nbsp;';
            } else {
                return '';
            }
        }

        $('.date-picker').on('click', function () {
            PersianDatePicker.Show(this, '@DateTime.Now.ToPersianDate()', true);
        });

        function createRequestStatusIcon(statusId, statusTitle, submitterUserFullName) {
            var statusColor = '#ffffff';

            switch (statusId) {
            case @RequestStatus.Registered.ToByte():
                statusColor = '#FFC107';
                break;
            case @RequestStatus.SentToPsp.ToByte():
                statusColor = '#FF9800';
                break;
            case @RequestStatus.NeedToReform.ToByte():
                statusColor = '#009688';
                break;
            case @RequestStatus.Done.ToByte():
                statusColor = '#8BC34A';
                break;
            case @RequestStatus.Rejected.ToByte():
                statusColor = '#f44336';
                break;
            case @RequestStatus.WebServiceError.ToByte():
                statusColor = '#AD1457';
                break;
            }
            return '<span style="background-color: ' + statusColor + '; font-weight: 500;" data-toggle="tooltip" title="' + submitterUserFullName + '" class="label label-default">' + statusTitle + '</span>';
        }

        function createPspIcon(pspId, pspTitle) {
            var pspColor, pspShortTitle;

            switch (pspId) {
            case @PspCompany.Fanava.ToByte():
                pspShortTitle = 'FA';
                pspColor = '#5C6BC0';
                break;
            case @PspCompany.IranKish.ToByte():
                pspShortTitle = 'IK';
                pspColor = '#E91E63';
                break;
            case @PspCompany.Parsian.ToByte():
                pspShortTitle = 'PA';
                pspColor = '#FFB300';
                break;
                  case @PspCompany.PardakhNovin.ToByte():
                                                                pspShortTitle = 'PN';
                                                                pspColor = '#0f4158';
                                                                break;

            default:
                pspShortTitle = '??';
                pspTitle = 'تخصیص داده نشده';
                pspColor = '#9E9E9E';
                break;
            }

            return '<span style="background-color: ' + pspColor + '; font-weight: 500;" data-toggle="tooltip" title="' + pspTitle + '" class="label label-default small-label">' + pspShortTitle + '</span>';
        }

        function refreshCurrentPage(){
            var currentPageNo = $('#RevokeRequestPagination li.page.active').data('page');
            loadData(false, currentPageNo);
        }

        $(document).ready(function () {
            loadData(true, 1);

            $('.only-number', '#SearchForm').filter_input({ regex: '[0-9]' });
            $('#BranchId').chosen({ width: "100%" });

            $('#DataTable').on('click.btn-delete', '.btn-delete', function () {
                var $button = $(this);

                $.showConfirm({
                    onConfirm: function () {
                        $button.button('loading');

                        $.post('@Url.Action("Delete", "RevokeRequest")', { revokeRequestId: $button.data('id') }).done(function (result) {
                            $button.button('reset');
                            $.processMessage(result);

                            if (result.success) {
                                $button.closest('tr').remove();

                                if ($('#DataTable tbody').is(":empty")) {
                                    $('#DataTable tbody').empty().append('<tr><td colspan="15"><div class="status-section"><i class="fa fa-folder-o"></i><p>هیچ موردی یافت نشد</p></div></td></tr>');
                                    $('#Pagination').twbsPagination('destroy');
                                }
                            }
                        });
                    }
                });
            });

            $('#DataTable').on('click.btn-send-revoke-request', '.btn-send-revoke-request', function () {
                var $button = $(this);

                $.showConfirm({
                    onConfirm: function () {
                        $button.button('loading');

                        $.post('@Url.Action("ReSend", "RevokeRequest")', { revokeRequestId: $button.data('id') }).done(function (result) {
                            $.processMessage(result);
                            $button.button('reset');

                            if (result.success) {
                                refreshCurrentPage();
                            }
                        });
                    }
                });
            });

            $('#DataTable').on('click.btn-approve', '.btn-approve', function () {
                var $button = $(this);

                $.showConfirm({
                    onConfirm: function () {
                        $button.button('loading');

                        $.post('@Url.Action("ChangeStatus", "RevokeRequest")', { revokeRequestId: $button.data('id'), approve: true }).done(function (result) {
                            $.processMessage(result);
                            $button.button('reset');

                            if (result.success) {
                                refreshCurrentPage();
                            }
                        });
                    }
                });
            });
    $('#DataTable').on('click.btn-edit', '.btn-edit', function () {
                showEditDialog($(this).data('id'));
            });

     function showEditDialog(terminalId) {
                $.showModal({
                    modalSize: 'xlg',
                    url: '@Url.Action("Edit", "RevokeRequest")',
                    data: { id: terminalId },
                    onClose: function (modalResult) {
                        if (modalResult === 'ok') {
                            refreshCurrentPage();
                        }
                    }
                });
            }
            
            $('#DataTable').on('click.btn-disapprove', '.btn-disapprove', function () {
                var $button = $(this);

                $.showConfirm({
                    onConfirm: function () {
                        $button.button('loading');

                        $.post('@Url.Action("ChangeStatus", "RevokeRequest")', { revokeRequestId: $button.data('id'), approve: false }).done(function (result) {
                            $.processMessage(result);
                            $button.button('reset');

                            if (result.success) {
                                refreshCurrentPage();
                            }
                        });
                    }
                });
            });

            $('#DataTable').on('click.btn-show-result', '.btn-show-result', function () {
                $('#ResultText').empty().append($(this).data('result'));
                $('#showResultModal').modal();
            });

            $('#SearchButton').on('click', function () {
                loadData(true, 1);
            });

            $('#ExportButton').on('click', function () {
                var $button = $(this);
                $button.button('loading');

                $.post('@Url.Action("ExportRevokeRequestData", "Export")', buildSearchParams()).done(function (result) {
                    $.processMessage(result);
                    $button.button('reset');

                    if (result.success) {
                        var $downloadLink = $('#DownloadFileModal .modal-body a');
                        $downloadLink.prop('href', '@Url.Action("DownloadRequestOutputFile", "Export")?fileKey=' + result.data);
                        $('#DownloadFileModal').modal();
                    }
                });
            });

            $('#DownloadFileLink').click(function () {
                $('#DownloadFileModal').modal('hide');
            });

            $('#ClearSearchFiltersButton').on('click', function () {
                $('input:text', '#SearchForm').val('');
                $('#BranchId', '#SearchForm').val('').trigger("chosen:updated");
                $('#PspId', '#SearchForm').val('@PspCompany.All.ToInt32()');
                $('#StatusId', '#SearchForm').val('');
                $('#IsWirelessAll', '#SearchForm').click();
            });
        });
</script>
}